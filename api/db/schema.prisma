// Don't forget to tell Prisma about your edits to this file using
// `yarn rw prisma migrate dev` or `yarn rw prisma db push`.
// `migrate` is like committing while `push` is for prototyping.
// Read more about both here:
// https://www.prisma.io/docs/orm/prisma-migrate

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

// Define your own datamodels here and run `yarn redwood prisma migrate dev`
// to create migrations for them and apply to your dev DB.
// TODO: Please remove the following example:
model User {
  id                  String      @id @default(uuid()) @db.VarChar()
  email               String      @unique @db.VarChar()
  name                String @db.VarChar()
  hashedPassword      String @db.VarChar()
  salt                String @db.VarChar()
  type                UserType
  resetToken          String? @db.VarChar()
  resetTokenExpiredAt DateTime?
  classesAsProfessor  Classroom[] @relation("professor")
  classesAsStudent    Classroom[] @relation("classStudents")
}

model Classroom {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar()
  code        String? @unique @db.VarChar(5)
  professor   User    @relation("professor", fields: [professorId], references: [id])
  professorId String @db.VarChar()
  students    User[]  @relation("classStudents")
}

enum UserType {
  P
  S
}
